name: Cloud Run Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production


    env:
      GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}


    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4    

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Set up Go for host steps
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.11'

      - name: Verify Go installation and module
        run: |
          go version
          go mod tidy
          go mod verify


      - name: Configure docker for artifact registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build a docker image
        run: docker build --pull --no-cache -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/todo-app-server/todo-app-server:${GITHUB_SHA::7} .

      - name: Push the docker image
        run: docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/todo-app-server/todo-app-server:${GITHUB_SHA::7}

      - name: Check permissions
        run: |
          echo "Checking Cloud Run permissions..."
          gcloud run services list --region=${{ env.GCP_REGION }}
          
      - name: Deploy 
        timeout-minutes: 20
        run: |
          set -euo pipefail
          
          echo "Starting deployment..."
          echo "Image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/todo-app-server/todo-app-server:${GITHUB_SHA::7}"
          echo "Region: ${{ env.GCP_REGION }}"
          echo "Project: ${{ env.GCP_PROJECT }}"
          
          # Create environment variables file in YAML format
          cat > env_vars.yaml << EOF
          DATABASE_URL: "${{ secrets.DATABASE_URL }}"
          ENV: "${{ secrets.ENV }}"
          JWT_SECRET: "${{ secrets.JWT_SECRET }}"
          EOF
          
          echo "Environment variables:"
          cat env_vars.yaml
          
          # Deploy to Cloud Run
          echo "Executing deployment command..."
          gcloud run deploy todo-app-server \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/todo-app-server/todo-app-server:${GITHUB_SHA::7} \
            --region=${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --platform=managed \
            --verbosity=info \
            --env-vars-file=env_vars.yaml
          
          echo "✅ Deployment command completed"
          
          # Wait a moment for the service to be available
          sleep 10
          
          # Verify deployment
          echo "Verifying deployment..."
          if gcloud run services describe todo-app-server --region=${{ env.GCP_REGION }} --format="value(status.url)"; then
            echo "✅ Service successfully deployed and accessible"
          else
            echo "❌ Service verification failed"
            exit 1
          fi